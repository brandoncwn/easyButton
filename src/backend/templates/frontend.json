{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1272.37030",
      "templateHash": "11981101088601813818"
    }
  },
  "parameters": {
    "projectName": {
      "type": "string",
      "defaultValue" : "bpajphtest"
    },
    "repositoryToken": {
      "type": "string"
    },
    "repositoryUrl": {
      "type": "string",
      "defaultValue": "https://github.com/jameshoff-msft/easyButton"
    },
    "branch": {
      "type": "string",
      "defaultValue": "main"
    },
    "cosmosDbName": {
      "type": "string",
      "defaultValue": "[parameters('projectName')]"
    },
    "cosmosContainerName": {
      "type": "string",
      "defaultValue": "[parameters('projectName')]"
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[parameters('projectName')]"
    },
    "cosmosdbAccountName": {
      "type": "string",
      "defaultValue": "[parameters('projectName')]"
    },
    "webAppName": {
      "type": "string",
      "defaultValue": "[toLower(format('webapp{0}', parameters('projectName')))]"
    },
    "accountName": {
      "type": "string",
      "defaultValue": "[parameters('projectName')]"
    },
    "primaryRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "environmentType": {
      "type": "string",
      "defaultValue": "nonprod",
      "allowedValues": [
        "nonprod",
        "prod"
      ]
    },
    "defaultConsistencyLevel": {
      "type": "string",
      "defaultValue": "Session",
      "allowedValues": [
        "Eventual",
        "ConsistentPrefix",
        "Session",
        "BoundedStaleness",
        "Strong"
      ],
      "metadata": {
        "description": "The default consistency level of the Cosmos DB account."
      }
    },
    "maxStalenessPrefix": {
      "type": "int",
      "defaultValue": 100000,
      "maxValue": 2147483647,
      "minValue": 10,
      "metadata": {
        "description": "Max stale requests. Required for BoundedStaleness. Valid ranges, Single Region: 10 to 1000000. Multi Region: 100000 to 1000000."
      }
    },
    "maxIntervalInSeconds": {
      "type": "int",
      "defaultValue": 300,
      "maxValue": 86400,
      "minValue": 5,
      "metadata": {
        "description": "Max lag time (minutes). Required for BoundedStaleness. Valid ranges, Single Region: 5 to 84600. Multi Region: 300 to 86400."
      }
    },
    "automaticFailover": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable automatic failover for regions"
      }
    }
   
  },
  "variables": {
    "storageAccountSkuName": "[if(equals(parameters('environmentType'), 'prod'), 'Standard_GRS', 'Standard_LRS')]",
    "accountName_var": "[toLower(parameters('accountName'))]",
    "consistencyPolicy": {
      "Eventual": {
        "defaultConsistencyLevel": "Eventual"
      },
      "ConsistentPrefix": {
        "defaultConsistencyLevel": "ConsistentPrefix"
      },
      "Session": {
        "defaultConsistencyLevel": "Session"
      },
      "BoundedStaleness": {
        "defaultConsistencyLevel": "BoundedStaleness",
        "maxStalenessPrefix": "[parameters('maxStalenessPrefix')]",
        "maxIntervalInSeconds": "[parameters('maxIntervalInSeconds')]"
      },
      "Strong": {
        "defaultConsistencyLevel": "Strong"
      }
    },
    "locations": [
      {
        "locationName": "[parameters('primaryRegion')]",
        "failoverPriority": 0,
        "isZoneRedundant": false
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-08-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('primaryRegion')]",
      "sku": {
        "name": "[variables('storageAccountSkuName')]"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2021-01-15",
      "name": "[variables('accountName_var')]",
      "kind": "GlobalDocumentDB",
      "location": "[parameters('primaryRegion')]",
      "properties": {
        "consistencyPolicy": "[variables('consistencyPolicy')[parameters('defaultConsistencyLevel')]]",
        "locations": "[variables('locations')]",
        "databaseAccountOfferType": "Standard",
        "enableAutomaticFailover": "[parameters('automaticFailover')]"
      }
    },
    {
      "type": "Microsoft.Web/staticSites",
      "apiVersion": "2020-12-01",
      "name": "[parameters('webAppName')]",
      "location": "eastus2",
      "sku": {
        "name": "Standard",
        "tier": "Standard"
      },
      "properties": {
        "provider": "GitHub",
        "repositoryUrl": "[parameters('repositoryUrl')]",
        "repositoryToken": "[parameters('repositoryToken')]",
        "branch": "[parameters('branch')]",
        "buildProperties": {
          "apiLocation": "src/frontend/api",
          "appLocation": "src/frontend"
        }
      }
    },
    {
      "type": "Microsoft.Web/staticSites/config",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}/{1}', parameters('webAppName'), 'appsettings')]",
      "kind": "staticWebAppSettings",
      "properties": {
        "COSMOS_DB_CONNECTION_STRING": "[format('AccountEndpoint=https://{0}.documents.azure.com:443/;AccountKey={1};', parameters('cosmosdbAccountName'), listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('accountName_var')), '2021-01-15').primaryMasterKey)]",
        "COSMOS_DB_DB": "[parameters('cosmosDbName')]",
        "COSMOS_DB_CONTAINER": "[parameters('cosmosContainerName')]",
        "BLOB_STORAGE_CONNECTION_STRING": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-08-01').keys[0].value)]",
        "BLOB_STORAGE_CONTAINER": "test"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('accountName_var'))]",
        "[resourceId('Microsoft.Web/staticSites', parameters('webAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    }
  ]
}